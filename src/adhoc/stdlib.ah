(over =)
(inst = (: bool  -> bool  -> bool) =bool)
(inst = (: int   -> int   -> bool) =int)
(inst = (: float -> float -> bool) =float)

(over <)
(inst < (: int   -> int   -> bool) <int)
(inst < (: float -> float -> bool) <float)

(over +)
(inst + (: int   -> int   -> int)   +int)
(inst + (: float -> float -> float) +float)

(over -)
(inst - (: int   -> int   -> int)   -int)
(inst - (: float -> float -> float) -float)

(over *)
(inst * (: int   -> int   -> int)   *int)
(inst * (: float -> float -> float) *float)

(over /)
(inst / (: int   -> int   -> int)   /int)
(inst / (: float -> float -> float) /float)

(defun id (: (forall a) => (x : a) -> a) x)
